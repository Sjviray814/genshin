const arr = [17.874666666666666,
  15.558666666666667,
  13.05,
  11.306666666666667,
  10.058,
  8.962,
  8.016,
  6.750666666666667,
  6.331333333333333,
  5.949333333333334,
  5.596,
  5.182666666666667,
  4.756666666666667,
  4.576666666666667,
  4.265333333333333,
  4.032,
  3.736666666666667,
  3.526,
  3.3173333333333335,
  3.132,
  2.93,
  2.9113333333333333,
  2.534,
  2.5313333333333334,
  2.3133333333333335,
  2.376,
  2.231333333333333,
  2.056,
  2.0906666666666665,
  1.932,
  1.8973333333333333,
  1.8646666666666667,
  1.638,
  1.652,
  1.6586666666666667,
  1.496,
  1.37,
  1.384,
  1.3413333333333333,
  1.2866666666666666,
  1.266,
  1.14,
  1.118,
  1.1126666666666667,
  1.0126666666666666,
  0.9673333333333334,
  0.9753333333333334,
  0.9373333333333334,
  0.918,
  0.8426666666666667,
  0.8166666666666667,
  0.7466666666666667,
  0.75,
  0.7186666666666667,
  0.7266666666666667,
  0.6746666666666666,
  0.6413333333333333,
  0.566,
  0.5973333333333334,
  0.5633333333333334,
  0.5826666666666667,
  0.4826666666666667,
  0.526,
  0.516,
  0.4533333333333333,
  0.41333333333333333,
  0.4146666666666667,
  0.36333333333333334,
  0.3566666666666667,
  0.304,
  0.3526666666666667,
  0.31866666666666665,
  0.294,
  0.28733333333333333,
  0.25733333333333336,
  0.258,
  0.21133333333333335,
  0.21866666666666668,
  0.212,
  0.18933333333333333,
  0.17466666666666666,
  0.16866666666666666,
  0.14333333333333334,
  0.15133333333333332,
  0.12,
  0.11466666666666667,
  0.098,
  0.102,
  0.07866666666666666,
  0.058666666666666666,
  0.06266666666666666,
  0.048,
  0.042666666666666665,
  0.019333333333333334,
  0.008];


let arr2 = [3.47,
  3.3493333333333335,
  3.244666666666667,
  3.260666666666667,
  3.1146666666666665,
  2.9306666666666668,
  2.856,
  2.716666666666667,
  2.5993333333333335,
  2.5513333333333335,
  2.4793333333333334,
  2.438,
  2.312,
  2.2253333333333334,
  2.239333333333333,
  2.1946666666666665,
  2.0533333333333332,
  2.0406666666666666,
  1.948,
  1.7766666666666666,
  1.7646666666666666,
  1.738,
  1.6786666666666668,
  1.6706666666666667,
  1.5733333333333333,
  1.5466666666666666,
  1.394,
  1.398,
  1.364,
  1.3406666666666667,
  1.322,
  1.2833333333333334,
  1.2126666666666666,
  1.1826666666666668,
  1.164,
  1.1466666666666667,
  1.114,
  1.054,
  0.996,
  0.984,
  0.9713333333333334,
  0.9213333333333333,
  0.862,
  0.8453333333333334,
  0.7893333333333333,
  0.812,
  0.8293333333333334,
  0.7253333333333334,
  0.72,
  0.734,
  0.672,
  0.6866666666666666,
  0.626,
  0.612,
  0.6226666666666667,
  0.5466666666666666,
  0.5653333333333334,
  0.538,
  0.5013333333333333,
  0.5446666666666666,
  0.454,
  0.4146666666666667,
  0.408,
  0.4086666666666667,
  0.38066666666666665,
  0.382,
  0.37333333333333335,
  0.302,
  0.3273333333333333,
  0.292,
  0.324,
  0.31,
  0.25666666666666665,
  0.22866666666666666,
  0.22533333333333333,
  0.218,
  0.198,
  0.198,
  0.21,
  0.164,
  0.15933333333333333,
  0.14933333333333335,
  0.13266666666666665,
  0.13066666666666665,
  0.11733333333333333,
  0.09466666666666666,
  0.088,
  0.07733333333333334,
  0.07466666666666667,
  0.05533333333333333,
  0.044,
  0.04133333333333333,
  0.028,
  0.019333333333333334,
  0.008666666666666666]
  
  let nums = [];
  for(let i = .05; i < 1; i += .01){
nums.push(Math.round(i * 100) / 100);
}



let arr3 = [];

arr2.forEach(number =>{ 
const closest = arr.reduce((prev, curr) => {
  return (Math.abs(curr - number) < Math.abs(prev - number) ? curr : prev);
});

arr3.push(closest);
})

//console.log(arr3);
let arr4 = [];

arr3.forEach(num =>{
    arr4.push(arr.indexOf(num));
})
//console.log(arr4);

let arr5 = [];

arr4.forEach(num =>{
    arr5.push(nums[num]);
})
//console.log(arr5);


let arr6 = []; // differences 

for(let i=0; i < arr5.length; i++){
    arr6.push(Math.round((arr5[i] - nums[i])* 1000) / 1000); //nums value is the same as royal crit rate
}

console.log(arr6);